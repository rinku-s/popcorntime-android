/*
 *  file: ProfileIconUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';

import {Image, TouchableOpacity,} from 'react-native';
import homestyle from '../styles/HomeStyle';
import {Colors} from '../helpers/Colors';
//import {navigateToScreen} from '../helpers/globalVariables';
/**
       * ProfileIconUI
       * Purpose: Define the overall look of the Profile Icon of the header
``*/
const ProfileIconUI = ({ navigateToScreen }) => {
  return (
    <TouchableOpacity onPress={() => navigateToScreen('UserProfile' )}>
      <Image
        source={require('../assets/user-icon.png')}
        style={homestyle.profileIcon}
        tintColor={Colors.backgroundColor}
      />
    </TouchableOpacity>
  );
};

export default ProfileIconUI;

/*
 *  file: RegisterUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';

import {Keyboard, Text, TextInput, TouchableOpacity, TouchableWithoutFeedback, View,} from 'react-native';
//import DatePicker from 'react-native-date-picker';
import DatePicker from 'react-native-datepicker';
import menustyle from '../styles/MenuStyle';
import {Colors} from '../helpers/Colors';
import {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';

/**
       * RegisterUI
       * Purpose: Define the overall look of the Register screen
``*/
const RegisterUI = ({
  userName,
  setUserName,
  emailAddress,
  setEmailAddress,
  birthDate,
  setBirthDate,
  password,
  setPassword,
  registerAPI,
}) => {
  return (
    <KeyboardAwareScrollView
      keyboardShouldPersistTaps={'always'}
      contentContainerStyle={{
        flexGrow: 1, // this will fix scrollview scroll issue by passing parent view width and height to it
      }}>
      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
        <View
          style={{ flex: 0.5, alignItems: 'center', padding: 10, margin: 10 }}>
          <View style={[menustyle.othermenuoptionbg]}>
            <Text style={[menustyle.menuheader]}>Username</Text>
            <TextInput
              style={[
                menustyle.menuoptionbg,
                {
                  flex: 1,
                  paddingLeft: 5,
                  justifyContent: 'center',
                  backgroundColor: Colors.backgroundColor,
                },
              ]}
              // onSubmitEditing={(event) => loginAPI(event.nativeEvent.text)}
              onChangeText={(text) => setUserName(text)} //searchFilterFunction(text)
              value={userName}
              clearButtonMode="always"
              underlineColorAndroid="transparent"
              //   placeholder="Enter username"
            />
          </View>
          <View style={menustyle.othermenuoptionbg}>
            <Text style={menustyle.menuheader}>Email</Text>
            <TextInput
              style={[
                menustyle.menuoptionbg,
                {
                  flex: 1,
                  paddingLeft: 5,
                  justifyContent: 'center',
                  backgroundColor: Colors.backgroundColor,
                },
              ]} // onSubmitEditing={(event) => loginAPI(event.nativeEvent.text)}
              onChangeText={(text) => setEmailAddress(text)} //searchFilterFunction(text)
              value={emailAddress}
              clearButtonMode="always"
              underlineColorAndroid="transparent"
              // placeholder="Enter email address"
            />
          </View>
          <View style={menustyle.othermenuoptionbg}>
            <Text style={menustyle.menuheader}>Password</Text>
            <TextInput
              style={[
                menustyle.menuoptionbg,
                {
                  flex: 1,
                  paddingLeft: 5,
                  justifyContent: 'center',
                  backgroundColor: Colors.backgroundColor,
                },
              ]}
              // onSubmitEditing={(event) => loginAPI(event.nativeEvent.text)}
              onChangeText={(text) => setPassword(text)} //searchFilterFunction(text)
              value={password}
              clearButtonMode="always"
              secureTextEntry={true}
              underlineColorAndroid="transparent"
              //   placeholder="Enter password"
            />
          </View>
          <View style={menustyle.othermenuoptionbg}>
            <Text style={menustyle.menuheader}>Date of Birth</Text>
            <DatePicker
              style={[
                menustyle.menuoptionbg,
                {
                  flex: 1,
                  paddingLeft: 5,
                  justifyContent: 'center',
                  backgroundColor: Colors.backgroundColor,
                },
              ]}
              customStyles={{
                dateIcon: {
                  position: 'absolute',
                  left: 0,
                  top: 4,
                  marginLeft: 0,
                },
                dateInput: {
                  marginLeft: 36,
                  borderWidth:0,
                },
              }}
              minDate={new Date("1922-01-01")}
              maxDate={new Date()}
              date={birthDate}
              onDateChange={(date) => {
                setBirthDate(date);
              }}
            />
          </View>
          <TouchableOpacity
            style={menustyle.logoutButton}
            onPress={() =>
              registerAPI(userName, emailAddress, password, birthDate)
            }>
            <Text style={[menustyle.menuoption, {color: Colors.backgroundColor}]}>Register</Text>
          </TouchableOpacity>
        </View>
      </TouchableWithoutFeedback>
    </KeyboardAwareScrollView>
  );
};

export default RegisterUI;

/*
 *  file: SearchUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';

import {ActivityIndicator, FlatList, Image, SafeAreaView, Text, TouchableOpacity, View,} from 'react-native';

import searchscreenstyle from '../styles/SearchScreenStyle';
import {Colors} from '../helpers/Colors';
import homestyle from '../styles/HomeStyle';

/**
       * SearchUI
       * Purpose: Define the overall look of the Search screen
``*/
const SearchUI = ({
  searchStr,
  dataSource,
  resultCount,
  getData,
  loading,
  navigateToScreen,
}) => {
  const renderFooter = () => {
    return (
      // Footer View with Loader
      <View style={searchscreenstyle.footer}>
        {loading ? (
          <ActivityIndicator color={Colors.primary} style={{ margin: 15,  }} />
        ) : null}
      </View>
    );
  };

  const ItemView = ({ item }) => {
    return (
      <TouchableOpacity
        style={homestyle.GridViewContainer}
        onPress={() => navigateToScreen(item)}>
        <Image
          style={homestyle.poster}
          source={{
            uri: 'https://image.tmdb.org/t/p/original' + item.poster_path,
          }}
        />
        <Text
          style={homestyle.title}>
          {item.title}
        </Text>
      </TouchableOpacity>
    );
  };

  const ItemSeparatorView = () => {
    return (
      <View
        style={homestyle.itemSeparator}
      />
    );
  };
  return (
    <SafeAreaView style={homestyle.safeareaview}>
      <Text style={homestyle.searchResultText}>
        {' '}
        Search Results for "{searchStr}"{' '}
      </Text>
      <FlatList
        style={[homestyle.FlatListLayout, { flex: 0.9, backgroundColor: Colors.secondaryVariant }]}
        data={dataSource}
        keyExtractor={(item, index) => index.toString()}
        ItemSeparatorComponent={ItemSeparatorView}
        renderItem={ItemView}
        ListFooterComponent={renderFooter}
        // onEndReached={getData}
        onEndReached={resultCount > 24 ? getData : null}
        onEndReachedThreshold={0.5}
        numColumns={3}
      />
    </SafeAreaView>
  );
};

export default SearchUI;

/*
 *  file: UserDetailsUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';


import {Text, View,} from 'react-native';
import menustyle from '../styles/MenuStyle';
import {Colors} from '../helpers/Colors';

/**
       * UserDetailsUI
       * Purpose: Define the overall look of the Profile screen
``*/
const UserDetailsUI = ({ userName, emailAddress, dateOfBirth }) => {
  return (
    <View style={{flex:1}}>
  <View style= {[menustyle.menuoptionbg,{flex:1, flexDirection: "row", height:60, maxHeight:60, justifyContent:"center", borderRadius:10, borderWidth: 1, borderColor: Colors.secondary, margin:5, alignItems:"flex-start", backgroundColor: Colors.secondaryVariant}]}>
  <Text style = {menustyle.menuheader}>Username</Text>
  <Text style = {menustyle.menuvalue}>{userName}</Text>
  </View>
  <View style= {[menustyle.menuoptionbg,{flex:1, flexDirection: "row", height:60, maxHeight:80, justifyContent:"center", borderRadius:10, borderWidth: 1, borderColor: Colors.secondary, margin:5, alignItems:"flex-start",  backgroundColor: Colors.secondaryVariant}]}>
  <Text style = {menustyle.menuheader}>Email</Text>
  <Text style = {menustyle.menuvalue}>{emailAddress}</Text>
  </View>
  <View style= {[menustyle.menuoptionbg,{flex:1, flexDirection: "row", height:60, maxHeight:60, borderRadius:10, borderWidth: 1, borderColor: Colors.secondary, margin:5, alignItems:"flex-start",  backgroundColor: Colors.secondaryVariant}]}>
  <Text style = {menustyle.menuheader}>Date of Birth</Text>
  <Text style = {menustyle.menuvalue}>{dateOfBirth}</Text>
  </View>
  <View style = {{flex:3}}></View>
  </View>
  );
};

export default UserDetailsUI;

/*
 *  file: UserProfileUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';

import {Dimensions, SafeAreaView, Text, TouchableOpacity,} from 'react-native';
import liststyle from '../styles/ListStyle';
import menustyle from '../styles/MenuStyle';
import {Colors} from '../helpers/Colors';

/**
       * detailsstyle
       * Purpose: Define the overall look of the Menu screen
``*/
const UserProfileUI = ({navigateToScreen, logout}) => {
  const windowWidth = Dimensions.get('window').width;
  return (
   <SafeAreaView style={liststyle.SafeAreaView}>
      <TouchableOpacity style={menustyle.menuoptionbg}  onPress={() => navigateToScreen('UserDetails')}>
      <Text style = {menustyle.menuoption}>My Profile</Text>
      </TouchableOpacity>
      <TouchableOpacity  style={menustyle.menuoptionbg} onPress={() => navigateToScreen('FavoritesList')}>
      <Text style = {menustyle.menuoption}>Favorites</Text>
      </TouchableOpacity>
      <TouchableOpacity  style={menustyle.menuoptionbg} onPress={() => navigateToScreen('Watchlist')}>
     <Text style = {menustyle.menuoption}>Watchlist</Text>
      </TouchableOpacity>
      <TouchableOpacity  style={menustyle.menuoptionbg} onPress={() => navigateToScreen('About')}>
     <Text style = {menustyle.menuoption}>About</Text>
      </TouchableOpacity>
    <TouchableOpacity  style={menustyle.logoutButton} onPress={()=> logout()}>
     <Text style = {[menustyle.menuoption, {color: Colors.backgroundColor}]}>Logout</Text>
      </TouchableOpacity>
    </SafeAreaView>
  );
}

export default UserProfileUI;

/*
 *  file: WatchlistUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';
import {Image, SafeAreaView, ScrollView, Text, TouchableOpacity, View,} from 'react-native';
import liststyle from '../styles/ListStyle'
import {Colors} from '../helpers/Colors'

/**
       * WatchlistUI
       * Purpose: Define the overall look of the Watchlist screen
``*/
const WatchlistUI = ({dataSource, navigateToScreen, getItem}) => {


  const ItemView = (item, key) => {
    return (
      // Flat List Item
      <View key={key} style={liststyle.itemView}>
      <TouchableOpacity style={{flex:1, flexDirection:'row',}}
        onPress={() => navigateToScreen(item)}>
              <Image
          style={{ alignSelf: 'stretch', flex: 0.3, height: 100, margin:15}}
          source={{
            uri: 'https://image.tmdb.org/t/p/original' + item.poster_path,
          }}
        />
        <Text
          style={liststyle.title}
          onPress={() => getItem(item)}>
          {item.title}
        </Text>
        <ItemSeparatorView />
       </TouchableOpacity>
      </View>
    );
  };

    const ItemSeparatorView = () => {
    return (
      <View
      //   style={styles.itemSeparatorStyle}
      />
    );
  };
  return (
        <SafeAreaView
        style={liststyle.safeAreaView}>
      <View
       style={{backgroundColor:Colors.secondaryVariant}}
      >
        {/* List Item as a function */}
        <ScrollView>
          {
            //Loop of JS which is like foreach loop
            dataSource.map(ItemView)
          }
        </ScrollView>
      </View>
    </SafeAreaView>
  );
}

export default WatchlistUI;

/*
 *  file: AboutUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';

import {SafeAreaView, Text,} from 'react-native';
import homestyle from '../styles/HomeStyle';
import {Colors} from '../helpers/Colors';
import detailsstyle from '../styles/DetailsStyle';

/**
       * AboutUI
       * Purpose: Define the overall look of the About screen
``*/
const AboutUI = ({description}) => {
  return (
  <SafeAreaView style={homestyle.safeareaview}>
   <Text style={[detailsstyle.summary, {margin: 15, color:Colors.primary, fontSize:14, fontWeight:"bold" }]}>{description} </Text>
   </SafeAreaView>
  );
};

export default AboutUI;

/*
 *  file: AppIconUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';

import {Image,} from 'react-native';
import homestyle from '../styles/HomeStyle';

/**
       * AppIconUI
       * Purpose: Define the overall look of the app icon screen
``*/
const AppIconUI = () => {
  return (
      <Image
        source={require('../assets/app-icon.png')}
        style={[homestyle.profileIcon, {marginLeft:10, }]}
     //   tintColor={Colors.backgroundColor}
      />
  );
};

export default AppIconUI;

/*
 *  file: DetailsUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';
//import GlobalFunc from '../helpers/globalFunc';
import {Image, ImageBackground, ScrollView, Text, TouchableOpacity, View,} from 'react-native';
import detailsstyle from '../styles/DetailsStyle';
import homestyle from '../styles/HomeStyle';
import {Colors} from '../helpers/Colors';

/**
       * DetailsUI
       * Purpose: Define the overall look of the Details screen
``*/
const DetailsUI = ({
  item,
  addToFaveList,
  faveListState,
  addToWatchList,
  watchListState,
  movie1,
  movie2,
  movie3,
  movie4,
  movie5,
  movie1Data,
  movie2Data,
  movie3Data,
  movie4Data,
  movie5Data,
  navigateToScreen,
  releaseYear,
}) => {
  const similarMoviesTitle = () => {
    return <Text style={detailsstyle.similarMovieTitle}> Similar Movies </Text>;
  };

  const displayRec = () => {
    console.log('DIsplay Rec log ' + movie1Data);
    if (
      movie1 != '' &&
      movie2 != '' &&
      movie3 != '' &&
      movie4 != '' &&
      movie5 != '' &&
      movie1Data != '' &&
      movie2Data != '' &&
      movie3Data != '' &&
      movie4Data != '' &&
      movie5Data != ''
    ) {
      return (
        <ScrollView horizontal={true}>
          <TouchableOpacity
            style={homestyle.GridViewContainer}
            onPress={() => navigateToScreen('Details', movie1Data)}>
            <Image style={homestyle.poster} source={{ uri: movie1 }} />
            <Text style={homestyle.title}>{movie1Data.title}</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={homestyle.GridViewContainer}
            onPress={() => navigateToScreen('Details', movie2Data)}>
            <Image style={homestyle.poster} source={{ uri: movie2 }} />
            <Text style={homestyle.title}>{movie2Data.title}</Text>
          </TouchableOpacity>

          <TouchableOpacity
            style={homestyle.GridViewContainer}
            onPress={() => navigateToScreen('Details', movie3Data)}>
            <Image style={homestyle.poster} source={{ uri: movie3 }} />
            <Text style={homestyle.title}>{movie3Data.title}</Text>
          </TouchableOpacity>

          <TouchableOpacity
            style={homestyle.GridViewContainer}
            onPress={() => navigateToScreen('Details', movie4Data)}>
            <Image style={homestyle.poster} source={{ uri: movie4 }} />
            <Text style={homestyle.title}>{movie4Data.title}</Text>
          </TouchableOpacity>
          <TouchableOpacity
            style={homestyle.GridViewContainer}
            onPress={() => navigateToScreen('Details', movie5Data)}>
            <Image style={homestyle.poster} source={{ uri: movie5 }} />
            <Text style={homestyle.title}>{movie5Data.title}</Text>
          </TouchableOpacity>
        </ScrollView>
      );
    } else {
      return <Text style={{ paddingLeft: 15 }}>No recommendations</Text>;
    }
  };
  return (
    <View style={detailsstyle.MainContainer}>
      <View style={{ flex: 1 }}>
        <ImageBackground
          style={detailsstyle.backdrop}
          source={{
            uri: 'https://image.tmdb.org/t/p/original' + item.backdrop_path,
          }}>
          <View style={{ flex: 1 }}>
            <Image
              style={detailsstyle.backdropposter}
              source={{
                uri: 'https://image.tmdb.org/t/p/original' + item.backdrop_path,
              }}
            />
          </View>
        </ImageBackground>
      </View>
      <View style={{ flex: 3 }}>
        <View
          style={{
            flexDirection: 'row',
            flex: 1,
            flexGrow: 0.4,
            maxHeight: 60,
            //backgroundColor: 'blue',
            //   maxHeight: 60,
            // borderBottomWidth:2,
            // borderColor:Colors.secondaryVariant,
          }}>
          <View style={{ alignItems: 'flex-start', flex: 2.5 }}>
            <Text style={detailsstyle.movieTitle}>{item.title} </Text>
            <Text style={detailsstyle.subtitle}>{item.tagline} </Text>
          </View>
          <View
            style={{ alignItems: 'stretch', flex: 1, flexDirection: 'row' }}>
            <TouchableOpacity
              style={detailsstyle.favelistbutton}
              onPress={() => addToFaveList(faveListState)}>
              <Image
                source={require('../assets/heart-icon.png')}
                resizeMode="contain"
                style={{
                  flex: 1,
                  width: 30,
                  height: 30,
                  tintColor:
                    faveListState == 'red' ? 'red' : Colors.backgroundColor,
                }}
              />
            </TouchableOpacity>

            <TouchableOpacity
              style={detailsstyle.watchlistbutton}
              onPress={() => addToWatchList(watchListState)}>
              <Image
                source={require('../assets/watchlist-icon.png')}
                resizeMode="contain"
                style={{
                  flex: 1,
                  width: 30,
                  height: 30,
                  tintColor:
                    watchListState == 'yellow'
                      ? 'yellow'
                      : Colors.backgroundColor,
                }}
              />
            </TouchableOpacity>
          </View>
        </View>
        <View style={{ flex: 0.2 }}></View>
        <View
          style={{
            flex: 0.2,
            alignItems: 'flex-start',
            justifyContent: 'flex-start',
            flexDirection: 'row',
            margin: 2,
            padding: 5,
          }}>
          <Text style={detailsstyle.genre}>{item.genres[0]}</Text>
          <Text style={detailsstyle.genre}>{item.genres[1]}</Text>
          <Text style={detailsstyle.genre}>{item.genres[2]}</Text>
        </View>
        <Text style={detailsstyle.summary}>{item.overview} </Text>

        <View
          style={{
            flex: 0.3,
            flexDirection: 'row',
            alignContent: 'stretch',
            borderRadius: 20,
            margin: 5,
            borderColor: Colors.secondary,
            backgroundColor: Colors.secondaryVariant,
          }}>
          <View
            style={{
              flex: 1,
              justifyContent: 'space-evenly',
              borderRadius: 50,
              margin: 5,
            }}>
            <Text style={{ textAlign: 'center', fontSize: 16 }}>
              {item.runtime}
            </Text>
            <Text style={{ textAlign: 'center', fontSize: 10 }}>minutes</Text>
          </View>
          <Text
            style={{
              textAlign: 'center',
              flex: 1,
              fontSize: 18,
              justifyContent: 'center',
              padding: 7,
              borderLeftWidth: 1,
              borderLeftColor: Colors.primaryVariant,
            }}>
            {' '}
            {releaseYear}
          </Text>
        </View>
        <View style={{ flex: 0.2 }}></View>
        <View>{similarMoviesTitle()}</View>
        <View style={{ flex: 1 }}>{displayRec()}</View>
      </View>
    </View>
  );
};

export default DetailsUI;

/*
 *  file: FavoritesUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';
import {Image, SafeAreaView, ScrollView, Text, TouchableOpacity, View,} from 'react-native';
import liststyle from '../styles/ListStyle'

/**
       * FavoritesUI
       * Purpose: Define the overall look of the Favorites screen
``*/
const FavoritesUI = ({dataSource, navigateToScreen, getItem}) => {


  const ItemView = (item, key) => {
    return (
      // Flat List Item
      <View key={key} style={liststyle.itemView}>
      <TouchableOpacity style={{flex:1, flexDirection:'row',}}
        onPress={() => navigateToScreen(item)}>
              <Image
          style={{ alignSelf: 'stretch', flex: 0.3, height: 100, margin:15}}
          source={{
            uri: 'https://image.tmdb.org/t/p/original' + item.poster_path,
          }}
        />
        <Text
          style={liststyle.title}
          onPress={() => getItem(item)}>
          {item.title}
        </Text>
        <ItemSeparatorView />
       </TouchableOpacity>
      </View>
    );
  };

    const ItemSeparatorView = () => {
    return (
      // Flat List Item Separator
      <View
      //   style={styles.itemSeparatorStyle}
      />
    );
  };
  return (
        <SafeAreaView style={liststyle.safeAreaView}>
      <View
      // style={styles.container}
      >
        {/* List Item as a function */}
        <ScrollView>
          {
            //Loop of JS which is like foreach loop
            dataSource.map(ItemView)
          }
        </ScrollView>
      </View>
    </SafeAreaView>
  );
}

export default FavoritesUI;

/*
 *  file: HomeUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';

import {ActivityIndicator, FlatList, Image, SafeAreaView, Text, TextInput, TouchableOpacity, View,} from 'react-native';
import homestyle from '../styles/HomeStyle';
import {Colors} from '../helpers/Colors';

/**
       * HomeUI
       * Purpose: Define the overall look of the Home screen
``*/
const HomeUI =({dataSource, searchString, setsearchString, searchAPI, resultCount, getMoviesDataFromAPI, url, loading, navigateToScreen})=>{
 // const windowHeight = useWindowDimensions().height;

const ItemView = ({ item }) => {
    return (
      <TouchableOpacity
        style={homestyle.GridViewContainer}
        onPress={() => navigateToScreen('Details', item)}>
        <Image
          style={homestyle.poster}
          source={{
            uri: 'https://image.tmdb.org/t/p/original' + item.poster_path,
          }}
        />
        <Text
          style={homestyle.title}>
          {item.title}
        </Text>
      </TouchableOpacity>
    );
  };
    const renderFooter = () => {
    return (
      <View style={homestyle.footer}>
        {loading ? (
          <ActivityIndicator color= {Colors.primary} style={{ margin: 15 }} />
        ) : null}
      </View>
    );
  };

  const ItemSeparatorView = () => {
    return (
      <View
        style={homestyle.itemSeparator}
      />
    );
  };

  return(
      <SafeAreaView style={homestyle.safeareaview}>
      <View style={homestyle.searchbarcontainer}>
        <TextInput
          style={homestyle.TextInputStyle}
          onSubmitEditing={(event) => searchAPI(event.nativeEvent.text)}
          onChangeText={(text) => setsearchString(text)} //searchFilterFunction(text)
          value={searchString}
          clearButtonMode="always"
          underlineColorAndroid="transparent"
          placeholder="Search PopcornTime"
        />
        <TouchableOpacity
          style={homestyle.SearchButton}
          onPress={() => searchAPI(searchString)}>
          <Image
            source={require('../assets/search-icon.png')}
             resizeMode="contain"
            style={homestyle.logo}
          />
        </TouchableOpacity>
      </View>
      <FlatList
        style={homestyle.FlatListLayout}
        data={dataSource}
        keyExtractor={(item, index) => index.toString()}
        ItemSeparatorComponent={ItemSeparatorView}
        renderItem={ItemView}
        ListFooterComponent={renderFooter}
        onEndReached={resultCount > 24 ? getMoviesDataFromAPI(url) : null}
        onEndReachedThreshold={0.5}
        numColumns={3}
      />
    </SafeAreaView>
  );
}

export default HomeUI;

/*
 *  file: LoginScreenUI.js
 *  author: Rinku Ansari <raf122@uregina.ca>
 *  version: 0.1
 *  date-created: mar-25-2022
 *  last-modified: apr-10-2022
 */
import React from 'react';

import {Image, Keyboard, Text, TextInput, TouchableOpacity, TouchableWithoutFeedback, View,} from 'react-native';
import loginstyle from '../styles/LoginStyle';
import {KeyboardAwareScrollView} from "react-native-keyboard-aware-scroll-view";
import {Colors} from '../helpers/Colors';

/**
       * LoginScreenUI
       * Purpose: Define the overall look of the LoginScreen screen
``*/
const LoginScreenUI = ({ userName, password, setUserName, setPassword , loginAPI, goToRegistration}) => {
  return (
          <KeyboardAwareScrollView
        keyboardShouldPersistTaps={'always'}
        contentContainerStyle={{
          flexGrow: 1 // this will fix scrollview scroll issue by passing parent view width and height to it
        }}
                style={loginstyle.keyboardavoidingview}
      >
      <View style={loginstyle.tinyLogoContainer}>
      <Image
        style={loginstyle.tinyLogo}
        source={require('../assets/app-icon.png')}
      />
      </View>
      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
        <View
          style={loginstyle.LoginContainer}>
          <TextInput
            style={loginstyle.TextInputStyle}
            // onSubmitEditing={(event) => loginAPI(event.nativeEvent.text)}
            onChangeText={(text) => setUserName(text)}
            value={userName}
            clearButtonMode="always"
            underlineColorAndroid="transparent"
            placeholder="Username"
          />
          <TextInput
            style={loginstyle.TextInputStyle}
            // onSubmitEditing={(event) => loginAPI(event.nativeEvent.text)}
            onChangeText={(text) => setPassword(text)}
            value={password}
            clearButtonMode="always"
            secureTextEntry={true}
            underlineColorAndroid="transparent"
            placeholder="Password"
          />
          <TouchableOpacity
            style={loginstyle.loginButton}
            onPress={() => loginAPI(userName, password)}>
            <Text style ={loginstyle.LoginButtonTextStyle}>Login</Text>
          </TouchableOpacity>

          <TouchableOpacity
             style={loginstyle.registerButton}
            onPress={() => goToRegistration()}>
            <Text style={[loginstyle.LoginButtonTextStyle, {color:Colors.primary}]}>Register</Text>
          </TouchableOpacity>
        </View>
      </TouchableWithoutFeedback>
      </KeyboardAwareScrollView>
 )
}

export default LoginScreenUI;
